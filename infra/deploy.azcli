resourceGroupName="POC_BCE-AI-Solution-02"
ContainerRegistryName="ACRBCEAISolution02"
FunctionAppName="FunctionApp-BCE-AI-Solution-02"
StorageAccountName="bceaisolution02function"
AppServicePlan="ASP-FunctionApp-BCE-AI-Solution-02"
ContainerRegistryWebHook="WebHookACRBCEAISolution02"

# Create Resource Group (if not already created)
#az group create --name $resourceGroupName --location australiaeast --tags "Owner"="David Summers"

# Deploy ACR using Bicep
az deployment group create --resource-group $resourceGroupName --template-file createACR.bicep --parameters containerRegistryName=${ContainerRegistryName}

# Log in to ACR and push the Docker image
az acr login --name ${ContainerRegistryName}
docker build -t acrbceaisolution02.azurecr.io/pythonfunc:latest ../
docker push acrbceaisolution02.azurecr.io/pythonfunc:latest

# Deploy infrastructure including Function App, Storage Account, and App Service Plan
az deployment group create --resource-group $resourceGroupName --template-file createInfra.bicep --parameters containerRegistryName=${ContainerRegistryName} functionAppName=${FunctionAppName} storageAccountName=${StorageAccountName} appServicePlanName=${AppServicePlan}

# Configure the Function App to use the Docker image
az functionapp config container set --name ${FunctionAppName} -g $resourceGroupName --image ${ContainerRegistryName}.azurecr.io/pythonfunc:latest --registry-username $(az acr credential show --name ${ContainerRegistryName} --query "username" -o tsv) --registry-password $(az acr credential show --name ${ContainerRegistryName} --query "passwords[0].value" -o tsv)
